name: Release

on:
  push:
    branches:
      - master

env:
  GITHUB_TOKEN: ${{ secrets.VI_SUDO_BOT_ALLREPO_READ_WRITE_WEBHOOKS }}
  AWS_REGION: 'eu-central-1'
  AWS_S3_BUCKET: 'frontend-live-preview'

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 14

      - name: Cache npm dependencies
        uses: actions/cache@v2.1.6
        id: cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - run: npm ci

      - name: Get old package version
        uses: martinbeentjes/npm-get-version-action@v1.1.0
        id: package-version-old

      - name: Build
        run: npm run build

      - name: Release with semantic-release
        run: npm run release
        env:
          NPM_TOKEN: ${{ secrets.VI_SUDO_BOT_ALLREPO_READ_WRITE_WEBHOOKS }}
          GH_TOKEN: ${{ secrets.VI_SUDO_BOT_ALLREPO_READ_WRITE_WEBHOOKS }}

      - name: Get new package version
        uses: martinbeentjes/npm-get-version-action@v1.1.0
        id: package-version-new

      - name: Extract repository name
        if: steps.package-version-old.outputs.current-version != steps.package-version-new.outputs.current-version
        shell: bash
        id: extract-repository-name
        run: echo "##[set-output name=repository;]$(echo ${GITHUB_REPOSITORY#*/})"

      - name: Deploy dist to frontend.live
        uses: jakejarvis/s3-sync-action@v0.5.1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FRONTEND_LIVE_PREVIEW_DEPLOY_AWS_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FRONTEND_LIVE_PREVIEW_DEPLOY_AWS_ACCESS_SECRET }}
          SOURCE_DIR: 'dist'
          DEST_DIR: '${{ steps.extract_repository_name.outputs.repository }}/releases/${{ steps.package-version-new.outputs.current-version}}'

      - name: Deploy storybook to frontend.live
        uses: jakejarvis/s3-sync-action@v0.5.1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FRONTEND_LIVE_PREVIEW_DEPLOY_AWS_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FRONTEND_LIVE_PREVIEW_DEPLOY_AWS_ACCESS_SECRET }}
          SOURCE_DIR: 'storybook-static'
          DEST_DIR: '${{ steps.extract_repository_name.outputs.repository }}/releases/${{ steps.package-version-new.outputs.current-version}}/preview'

      - name: Invalidate CDN cache
        uses: awact/cloudfront-action@0.1.2
        env:
          DISTRIBUTION_ID: ${{ secrets.FRONTEND_LIVE_PREVIEW_DISTRIBUTION_ID }}
          SOURCE_DIR: '${{ steps.extract_repository_name.outputs.repository }}/${{ steps.extract_branch_name.outputs.branch }}'
          AWS_ACCESS_KEY_ID: ${{ secrets.FRONTEND_LIVE_PREVIEW_DEPLOY_AWS_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FRONTEND_LIVE_PREVIEW_DEPLOY_AWS_ACCESS_SECRET }}
